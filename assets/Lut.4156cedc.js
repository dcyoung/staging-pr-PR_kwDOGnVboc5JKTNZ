import{d as o,e as u}from"./index.de5560ba.js";class g{constructor(t,s=32){this.isLut=!0,this.lut=[],this.map=[],this.n=0,this.minV=0,this.maxV=1,this.setColorMap(t,s)}set(t){return t.isLut===!0&&this.copy(t),this}setMin(t){return this.minV=t,this}setMax(t){return this.maxV=t,this}setColorMap(t,s=32){this.map=l[t]||l.rainbow,this.n=s;const F=1/this.n,h=new o,a=new o;this.lut.length=0,this.lut.push(new o(this.map[0][1]));for(let p=1;p<s;p++){const m=p*F;for(let i=0;i<this.map.length-1;i++)if(m>this.map[i][0]&&m<=this.map[i+1][0]){const e=this.map[i][0],r=this.map[i+1][0];h.set(this.map[i][1]),a.set(this.map[i+1][1]);const n=new o().lerpColors(h,a,(m-e)/(r-e));this.lut.push(n)}}return this.lut.push(new o(this.map[this.map.length-1][1])),this}copy(t){return this.lut=t.lut,this.map=t.map,this.n=t.n,this.minV=t.minV,this.maxV=t.maxV,this}getColor(t){t=u.clamp(t,this.minV,this.maxV),t=(t-this.minV)/(this.maxV-this.minV);const s=Math.round(t*this.n);return this.lut[s]}addColorMap(t,s){return l[t]=s,this}createCanvas(){const t=document.createElement("canvas");return t.width=1,t.height=this.n,this.updateCanvas(t),t}updateCanvas(t){const s=t.getContext("2d",{alpha:!1}),F=s.getImageData(0,0,1,this.n),h=F.data;let a=0;const p=1/this.n,m=new o,i=new o,e=new o;for(let r=1;r>=0;r-=p)for(let n=this.map.length-1;n>=0;n--)if(r<this.map[n][0]&&r>=this.map[n-1][0]){const c=this.map[n-1][0],x=this.map[n][0];m.set(this.map[n-1][1]),i.set(this.map[n][1]),e.lerpColors(m,i,(r-c)/(x-c)),h[a*4]=Math.round(e.r*255),h[a*4+1]=Math.round(e.g*255),h[a*4+2]=Math.round(e.b*255),h[a*4+3]=255,a+=1}return s.putImageData(F,0,0),t}}const l={rainbow:[[0,255],[.2,65535],[.5,65280],[.8,16776960],[1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]};export{g as L};
